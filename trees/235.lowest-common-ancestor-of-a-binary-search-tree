/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
// recursive
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {

        if((root->val > p->val) && (root->val > q->val))
            return lowestCommonAncestor(root->left, p, q);
        else if((root->val < p->val) && (root->val < q->val))
            return lowestCommonAncestor(root->right, p, q);
        else
            return root;
    }
};

// iterative
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        
        TreeNode* curr = root;
        while(1)
        {
            if((curr->val > p->val) && (curr->val > q->val))
                curr = curr->left;
            else if((curr->val < p->val) && (curr->val < q->val))
                curr = curr->right;
            else
                return curr;
        }
    }
};
